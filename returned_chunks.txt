

 --- 

. behavior The Java run-time environment is free to use whatever size it wants, as long as the types behave as you declared them. The width and ranges of these integer types vary widely, as shown in this table: |Name|Width|Range|
|---|---|---|
|**long**|64|–9,223,372,036,854,775,808 to 9,223,372,036,854,775,807|
|**int**|32|–2,147,483,648 to 2,147,483,647|
|**short**|16|–32,768 to 32,767|
|**byte**|8|–128 to 127|  
Let’s look at each type of integer. # byte
byte The smallest integer type is . This is a signed 8-bit type that has a range from –128 to byte 127

 --- 

byte Byte variables are declared by use of the keyword. For example, the following byte b c declares two variables called and : # Part I
byte b, c; # short
short is a signed 16-bit type. It has a range from –32,768 to 32,767. It is probably the least- short used Java type. Here are some examples of variable declarations: short s; short t; # int
int The most commonly used integer type is . It is a signed 32-bit type that has a range int from –2,147,483,648 to 2,147,483,647. In addition to other uses, variables of type are commonly employed to control loops and to index arrays